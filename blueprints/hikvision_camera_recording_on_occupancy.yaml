blueprint:
  name: Hikvision Camera Manual Recording via Occupancy
  description: >
    Start or stop manual recording on a Hikvision camera
    whenever a specified occupancy input_boolean changes state.
  domain: automation
  input:
    occupancy_boolean:
      name: Occupancy Boolean
      description: Input_boolean entity that controls when the camera
        should start or stop manual recording.
      selector:
        entity:
          domain: input_boolean

    camera_hostname:
      name: Camera Hostname
      description: Hostname or IP address of the Hikvision camera to control.
      selector:
        text:

    camera_username:
      name: Camera Username
      description: Username with sufficient permissions to trigger manual recording.
      selector:
        text:

    camera_password:
      name: Camera Password
      description: Password for the Hikvision camera user account.
      selector:
        text:
          type: password

trigger:
  - platform: state
    alias: Trigger on Occupancy Boolean change
    entity_id: !input occupancy_boolean

variables:
  hostname: !input camera_hostname
  username: !input camera_username
  password: !input camera_password
  action: >-
    {{ 'start' if is_state(trigger.to_state.entity_id, 'on') else 'stop' }}

action:
  - alias: Validate hostname is provided
    condition: template
    value_template: "{{ hostname | trim | length > 0 }}"

  - alias: Call Pyscript to set manual recording
    service: pyscript.hikvision_manual_recording
    data:
      host_name: "{{ hostname }}"
      user_name: "{{ username }}"
      password: "{{ password }}"
      action: "{{ action }}"
    response_variable: action_response

  - alias: Process Pyscript response
    choose:
      - conditions:
          - alias: If response is successful
            condition: template
            value_template: "{{ action_response.success | default(false) }}"
        sequence:
          - alias: Log successful recording change
            service: logbook.log
            data:
              name: Hikvision
              message: "Recording {{ action }} succeeded on {{ hostname }}"

      - conditions:
          - alias: If response indicates failure
            condition: template
            value_template: "{{ not action_response.success | default(false) }}"
        sequence:
          - alias: Notify of recording failure
            service: persistent_notification.create
            data:
              title: "Hikvision Recording Error"
              message: >-
                Recording {{ action }} failed on {{ hostname }}:
                {{ action_response.error | default('Unknown error') }}

mode: queued
max: 10
